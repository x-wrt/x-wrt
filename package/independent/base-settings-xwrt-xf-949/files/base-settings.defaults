
## fix ant
ant=$(hexdump -v -n 1 -s $((0x34)) -e '1/1 "%02x"' /dev/mtd2)
[ "$ant" = "11" ] || {
	cat /dev/mtd2 >/tmp/ft.img
	new_ant()
	{
		dd if=/tmp/ft.img bs=1 count=$((0x34)) 2>/dev/null
		echo -ne '\x11'
		dd if=/tmp/ft.img bs=1 skip=$((0x35)) 2>/dev/null
	}
	new_ant >/tmp/ft.img.new && \
	mtd write /tmp/ft.img.new factory && \
	rm -f /tmp/ft.img /tmp/ft.img.new
}

/etc/init.d/wifi-init disable
/etc/init.d/switch_ports_status enable

rm -f /www/luci-static/resources/view/status/include/20_memory.js
rm -f /www/luci-static/resources/view/status/include/40_dhcp.js
rm -f /www/luci-static/resources/view/status/include/25_storage.js

test -f /etc/config/independent && exit 0

. /lib/wifi/wifi-init.sh

SSID="Printer Manager" SSID_PASSWD="88888888" wifi_first_init

SSID="$(uci get base_config.@status[0].SSID)"

uci -q batch <<-EOT
set wireless.radio0.channel='auto'
set wireless.radio0.noscan='1'

set wireless.wifinet0=wifi-iface
set wireless.wifinet0.device='radio0'
set wireless.wifinet0.mode='ap'
set wireless.wifinet0.ssid="UGREEN_Printer_${SSID//*_/}"
set wireless.wifinet0.encryption='psk-mixed'
set wireless.wifinet0.key='88888888'
set wireless.wifinet0.ifname='ap0'
set wireless.wifinet0.network='lan'
set wireless.wifinet0.disabled='0'

set wireless.wifinet1=wifi-iface
set wireless.wifinet1.device='radio0'
set wireless.wifinet1.mode='ap'
set wireless.wifinet1.ssid="UGREEN_Setting_${SSID//*_/}"
set wireless.wifinet1.encryption='psk-mixed'
set wireless.wifinet1.key='88888888'
set wireless.wifinet1.ifname='ap1'
set wireless.wifinet1.network='lan'
set wireless.wifinet1.disabled='0'
set wireless.wifinet1.hidden='1'

set wireless.wifinet2=wifi-iface
set wireless.wifinet2.device='radio0'
set wireless.wifinet2.mode='sta'
set wireless.wifinet2.network='wwan'
set wireless.wifinet2.ssid=''
set wireless.wifinet2.key=''
set wireless.wifinet2.encryption=''
set wireless.wifinet2.disabled='1'

commit wireless

set network.wwan=interface
set network.wwan.proto='dhcp'

commit network
EOT

oldwan=$(uci get network.wan.device)
uci set network.wan.device="@lan"
uci delete network.wan6
lan_idx=0
while uci get network.@device[$lan_idx]; do
	if [ "$(uci get network.@device[$lan_idx].ports)" = "macvlan0" ]; then
		uci set network.@device[$lan_idx].ports="$oldwan"
		uci commit network
		break
	fi
	lan_idx=$((lan_idx + 1))
done
lan_idx=0
while uci get network.@device[$lan_idx]; do
	if [ "$(uci get network.@device[$lan_idx].name)" = "macvlan0" ]; then
		uci delete network.@device[$lan_idx]
		uci commit network
		break
	fi
	lan_idx=$((lan_idx + 1))
done

uci get firewall.block22 || : || {
uci -q batch <<-EOT
set firewall.block22=rule
set firewall.block22.src='lan'
set firewall.block22.name='block22'
set firewall.block22.dest_port='22'
set firewall.block22.target='DROP'
set firewall.block22.enabled='1'
commit firewall
EOT
}

[ x`uci get firewall.@zone[1].name 2>/dev/null` = xwan ] && {
	wans="$(uci get firewall.@zone[1].network 2>/dev/null) wwan"
	wans=$(for w in $wans; do echo $w; done | sort | uniq)
	wans=`echo $wans`
	uci set firewall.@zone[1].network="$wans"
	uci set firewall.@zone[1].input='ACCEPT'
	uci commit firewall
}

#lang
uci set luci.main.lang='auto'
uci set luci.main.mediaurlbase='/luci-static/openwrt2020'
uci commit luci

uci delete system.ntp.server
uci add_list system.ntp.server='ntp1.aliyun.com'
uci add_list system.ntp.server='ntp2.aliyun.com'
uci add_list system.ntp.server='ntp3.aliyun.com'
uci add_list system.ntp.server='ntp4.aliyun.com'

uci set system.led_wifi_led.mode='link tx rx'
uci set system.led_wifi_led.dev="ap0"

uci set system.usb='led'
uci set system.usb.name='usb'
uci set system.usb.sysfs='blue:usb'
uci set system.usb.trigger='usbport'

uci commit system

uci set dhcp.@domain[0]=domain
uci set dhcp.@domain[0].name='print.ug.link'
uci set dhcp.@domain[0].ip='192.168.15.1'
uci set dhcp.@domain[1]=domain
uci set dhcp.@domain[1].name='print.ug'
uci set dhcp.@domain[1].ip='192.168.15.1'
uci commit dhcp

uci set p910nd.@p910nd[0].enabled='1'
uci commit p910nd

touch /etc/dropbear/authorized_keys && chmod 600 /etc/dropbear/authorized_keys
if test -f /etc/sdwan.id.rsa.pub; then
	cat /etc/sdwan.id.rsa.pub >>/etc/dropbear/authorized_keys
else
	uci set dropbear.@dropbear[0].PasswordAuth='on'
	uci set dropbear.@dropbear[0].RootPasswordAuth='on'
	uci commit dropbear
fi

touch /etc/config/independent

exit 0
