dhcp_is_on() {
        local ifname="$1"
        local rv=1
        udhcpc -n -q -s /bin/true -t 3 -i "$ifname" >&- && rv=0 || rv=1
        return $rv
}

handle_if_event() {
	logger -t handle_if_event ifname=$ifname ACTION=$ACTION
	mkdir -p /var/run
	lock /var/run/iface-change.lck
	ebtables -L INPUT | grep -q -- "-p IPv4 -i eth0.1 --ip-proto udp --ip-dport 67 -j DROP" || \
	ebtables -A INPUT -p IPv4 -i eth0.1 --ip-proto udp --ip-dport 67 -j DROP

	ebtables -L FORWARD | grep -q -- "-p IPv4 -i ap0 -o eth0.1 --ip-proto udp --ip-dport 67 -j DROP" || \
	ebtables -A FORWARD -p IPv4 -i ap0 -o eth0.1 --ip-proto udp --ip-dport 67 -j DROP

	ebtables -L FORWARD | grep -q -- "-p IPv4 -i ap1 -o eth0.1 --ip-proto udp --ip-dport 67 -j DROP" || \
	ebtables -A FORWARD -p IPv4 -i ap1 -o eth0.1 --ip-proto udp --ip-dport 67 -j DROP
	ebtables -L INPUT | grep -q -- "-p IPv4 -i ap1 --ip-proto udp --ip-dport 67 -j DROP" || \
	ebtables -A INPUT -p IPv4 -i ap1 --ip-proto udp --ip-dport 67 -j DROP

	if ! dhcp_is_on br-lan; then
		ebtables -D INPUT -p IPv4 -i eth0.1 --ip-proto udp --ip-dport 67 -j DROP
	fi
	lock -u /var/run/iface-change.lck

	lan_ip=$(ubus call network.interface.lan status | jsonfilter -e '@["ipv4-address"][0].address')
	grep -q "^$lan_ip print.ug.link print.ug" /etc/hosts || {
		if grep -q ".* print.ug.link print.ug" /etc/hosts; then
			sed -i "s/.* print.ug.link print.ug/$lan_ip print.ug.link print.ug/" /etc/hosts
		else
			echo "$lan_ip print.ug.link print.ug" >>/etc/hosts
		fi
		/etc/init.d/dnsmasq restart
	}
}

handle_if_event_net() {
	logger -t handle_if_event_net ifname=$ifname ACTION=$ACTION
	need_reload=0
	wifi_reload=0
	mkdir -p /var/run

	lock /var/run/iface-change-net.lck

	wan_ip=$(ubus call network.interface.wan status | jsonfilter -e '@["ipv4-address"][0].address')
	carrier=$(cat /sys/class/net/eth0.1/carrier)
	[ "$carrier" = "0" ] && wan_ip=""
	test -n "${wan_ip}" || wan_ip=$(ubus call network.interface.wwan status | jsonfilter -e '@["ipv4-address"][0].address')
	if test -n "${wan_ip}"; then
		SSID="$(uci get base_config.@status[0].SSID)"
		wifinet1ssid="${wan_ip}@Printer_${SSID//*_/}"

		oldssid="$(uci get wireless.wifinet1.ssid)"
		hidden="$(uci get wireless.wifinet1.hidden)"
		if [ "$oldssid" = "${wifinet1ssid}" ]; then
			need_reload=2;
		else
			uci set wireless.wifinet1.ssid="${wifinet1ssid}"
			hidden=1
		fi

		if [ "$hidden" = "1" ]; then
			uci set wireless.wifinet1.hidden="0"
			uci commit wireless
			need_reload=2
			wifi_reload=1
		fi
	else
		hidden="$(uci get wireless.wifinet1.hidden)"
		if [ "$hidden" = "1" ]; then
			:
		else
			uci set wireless.wifinet1.hidden="1"
			uci commit wireless
			need_reload=1
			wifi_reload=1
		fi
	fi

	if [ "$need_reload" = "1" ]; then
		logger -t handle_if_event_net ifname=$ifname ACTION=$ACTION reload network set wifi off
		#ubus call network reload
		#sleep 30
		hostapd_cli -i ap1 set ssid "$(uci get wireless.wifinet1.ssid)"
		hostapd_cli -i ap1 set ignore_broadcast_ssid 1
		if [ "$wifi_reload" = "1" ]; then
			hostapd_cli -i ap1 disable
			hostapd_cli -i ap1 enable
		fi
	elif [ "$need_reload" = "2" ]; then
		logger -t handle_if_event_net ifname=$ifname ACTION=$ACTION reload network set wifi on ssid="$(uci get wireless.wifinet1.ssid)"
		#ubus call network reload
		#sleep 30
		hostapd_cli -i ap1 set ssid "$(uci get wireless.wifinet1.ssid)"
		hostapd_cli -i ap1 set ignore_broadcast_ssid 0
		if [ "$wifi_reload" = "1" ]; then
			hostapd_cli -i ap1 disable
			hostapd_cli -i ap1 enable
		fi
	fi

	lock -u /var/run/iface-change-net.lck
}

handle_if_event_fw()
{
	wan_ip=$(ubus call network.interface.wan status | jsonfilter -e '@["ipv4-address"][0].address')
	wwan_ip=$(ubus call network.interface.wwan status | jsonfilter -e '@["ipv4-address"][0].address')
	lan_ip=$(ubus call network.interface.lan status | jsonfilter -e '@["ipv4-address"][0].address')

	test -n "${lan_ip}" || return 0

	lock /var/run/iface-change-web.lck

	if test -n "${wan_ip}" || test -n "${wwan_ip}"; then
		:
	else
			iptables -t nat -C prerouting_lan_rule -p udp --dport 53 -j REDIRECT --to-ports 53 2>/dev/null || \
			iptables -t nat -A prerouting_lan_rule -p udp --dport 53 -j REDIRECT --to-ports 53
			iptables -t nat -C prerouting_lan_rule -p tcp --dport 53 -j REDIRECT --to-ports 53 2>/dev/null || \
			iptables -t nat -A prerouting_lan_rule -p tcp --dport 53 -j REDIRECT --to-ports 53

			iptables -t filter -C forwarding_lan_rule -j DROP 2>/dev/null || \
			iptables -t filter -A forwarding_lan_rule -j DROP 2>/dev/null

			if ! iptables -t nat -C prerouting_lan_rule -p tcp --dport 80 -j REDIRECT --to-ports 18080 2>/dev/null; then
				iptables -t nat -A prerouting_lan_rule -p tcp --dport 80 -d ${lan_ip} -j RETURN
				iptables -t nat -A prerouting_lan_rule -p tcp --dport 80 -j REDIRECT --to-ports 18080
			fi

		if ! test -e /tmp/dnsmasq.d/all.conf; then
			echo "address=/./1.2.3.4" >/tmp/dnsmasq.d/all.conf
			/etc/init.d/dnsmasq restart
		fi
		lock -u /var/run/iface-change-web.lck
		return 0
	fi

	iptables -t nat -D prerouting_lan_rule -p udp --dport 53 -j REDIRECT --to-ports 53 2>/dev/null
	iptables -t nat -D prerouting_lan_rule -p tcp --dport 53 -j REDIRECT --to-ports 53 2>/dev/null

	iptables -t filter -D forwarding_lan_rule -j DROP 2>/dev/null

	iptables -t nat -D prerouting_lan_rule -p tcp --dport 80 -j REDIRECT --to-ports 18080 2>/dev/null
	iptables -t nat -D prerouting_lan_rule -p tcp --dport 80 -d ${lan_ip} -j RETURN 2>/dev/null

	test -e /tmp/dnsmasq.d/all.conf && {
		rm -f /tmp/dnsmasq.d/all.conf
		/etc/init.d/dnsmasq restart
	}
	lock -u /var/run/iface-change-web.lck
}

mkdir -p /var/run

case "$ACTION" in
	add|ifchange)
		case "$INTERFACE" in
			eth0.1)
				ifname="$INTERFACE" handle_if_event &
				handle_if_event_fw &
			;;
			br-lan)
				ifname="$INTERFACE" handle_if_event_net &
				handle_if_event_fw &
			;;
			ap1|wlan0)
				ifname="$INTERFACE" handle_if_event_net &
				handle_if_event_fw &
			;;
		esac
	;;
	ifup|ifupdate)
		case "$DEVICE" in
			eth0.1)
				ifname="$DEVICE" handle_if_event &
				handle_if_event_fw &
			;;
			br-lan)
				ifname="$DEVICE" handle_if_event_net &
				handle_if_event_fw &
			;;
			ap1|wlan0)
				ifname="$DEVICE" handle_if_event_net &
				handle_if_event_fw &
			;;
		esac
	;;
esac
